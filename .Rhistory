panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.9, 0.75),
legend.title = element_blank(),
legend.key.size = unit(3,"line")
)
print(model2_plot)
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.9, 0.75),
legend.title = element_blank(),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.75),
legend.title = element_blank(),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.75),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.75, 0.75),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.9),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model2_plot)
dev.off()
### ploting model 2
model2_plot = ggplot(data = sec_model_cor,
aes(x = cor_values,
fill = habitat_range)
) +
geom_histogram(position = "identity",
color= "black",
alpha= 0.5) +
scale_fill_manual(values=state_cols,
labels= c(
"rainforest",
"generalist",
"open-vegetation"
))+
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.85),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_2", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model2_plot)
dev.off()
ggplot(data = fir_model_cor,
aes(x = cor_values)
) +
geom_histogram(position = "identity",
fill ="lightgray"
color= "black",
ggplot(data = fir_model_cor,
aes(x = cor_values)
) +
geom_histogram(position = "identity",
fill ="lightgray",
color= "black",
alpha= 0.5)
### plotiing model 1
model1_plot = ggplot(data = fir_model_cor,
aes(x = cor_values)
) +
geom_histogram(position = "identity",
fill ="lightgray",
color= "black",
alpha= 0.5) +
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.85),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_1", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model2_plot)
dev.off()
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_1", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model1_plot)
dev.off()
### plotiing model 1
model1_plot = ggplot(data = fir_model_cor,
aes(x = cor_values)
) +
geom_histogram(position = "identity",
fill ="lightgray",
color= "black",
alpha= 0.5) +
xlim(c(-1,1)) +
xlab("Correlation seed mass - SLA") +
ylab("Frequency")+
theme(panel.background=element_rect(fill="white"),
panel.grid=element_line(colour=NULL),
panel.border=element_rect(fill=NA,colour="black"),
axis.title=element_text(size=10,face="bold"),
axis.text=element_text(size=8),
legend.position = c(0.8, 0.85),
legend.title = element_blank(),
legend.text = element_text(size=6),
legend.key.size = unit(0.5,"line")
)
### exporting directory
dir_out = "4_graphics/"
### export plot
tiff(paste0(dir_out,"model_1", ".tiff"),
units="cm", width=7.5, height=6.5, res=600)
print(model1_plot)
dev.off()
models$er = matrix(c(0,1,1,
1,0,1,
1,1,0), 3, byrow = T)
models$or_sym =  matrix(c(0,1,0,
1,0,2,
0,2,0), 3, byrow = T)
### model fit list
model_fit = list()
models$er = matrix(c(0,1,1,
1,0,1,
1,1,0), 3, byrow = T)
models$or_sym =  matrix(c(0,1,0,
1,0,2,
0,2,0), 3, byrow = T)
### model fit list
models = list()
models$er = matrix(c(0,1,1,
1,0,1,
1,1,0), 3, byrow = T)
models$or_sym =  matrix(c(0,1,0,
1,0,2,
0,2,0), 3, byrow = T)
models$or_asym  = matrix(c(0,1,0,
2,0,3,
0,4,0), 3, byrow = T)
models$un_sym = matrix(c(0,1,2,
1,0,3,
2,3,0), 3, byrow = T)
models$un_asym = matrix(c(0,1,2,
3,0,4,
5,6,0), 3, byrow = T)
### fit models
er_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= my_models$er)
### model fit list
model_list = list()
### model fit list
model_list = list()
model_list$er = matrix(c(0,1,1,
1,0,1,
1,1,0), 3, byrow = T)
model_list$or_sym =  matrix(c(0,1,0,
1,0,2,
0,2,0), 3, byrow = T)
model_list$or_asym  = matrix(c(0,1,0,
2,0,3,
0,4,0), 3, byrow = T)
model_list$un_sym = matrix(c(0,1,2,
1,0,3,
2,3,0), 3, byrow = T)
model_list$un_asym = matrix(c(0,1,2,
3,0,4,
5,6,0), 3, byrow = T)
### fit models
er_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= model_list$er)
or_sym_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= model_list$or_sym)
or_asym_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= model_list$or_asym)
un_sym_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= model_list$un_sym)
un_asym_fit = fitDiscrete(phy = mcc_phylo ,
dat = spp_states,
model= model_list$un_asym)
### picking AICc scores
aicc = c("er" = er_fit$opt$aicc,
"or_sym" = or_sym_fit$opt$aicc,
"or_asym" = or_asym_fit$opt$aicc,
"un_sym" = un_sym_fit$opt$aicc,
"un_asym" = un_asym_fit$opt$aicc
)
### parameter numbers
k = c("er" = 1,
"or_sym" = 2,
"or_asym" = 4,
"un_sym" = 3,
"un_asym" = 6
)
### delta aicc
daicc = sort(aicc  - min(aicc))
### lowest daicc
fir_model = names(daicc[1])
sec_model = names(daicc[2])
### chossing best transition model
if (daicc[2] >= 2) {
best_model = fir_model
}
if (daicc[2] < 2) {
if(k[fir_model] < k[sec_model]){
best_model = fir_model
}
if(k[fir_model] > k[sec_model]){
best_model = sec_model
}
}
### infer simmaps
all_maps = phytools::make.simmap(tree = mcc_phylo,
x = spp_states,
model = model_list[[best_model]],
pi = c(0.25,0.5,0.25),
nsim = 100
)
### describe maps
des_map =  phytools::describe.simmap(all_maps)
### ancestral states probs
ace = des_map$ace
### setting states
# tip states probs
tip_states_probs = ace[(1+n_inner_nodes):(n_inner_nodes +n_tips), ]
tip_states_probs = tip_states_probs[,names(state_cols)]
# ancestral state probs
inner_node_probs = ace[1:n_inner_nodes,]
inner_node_probs = inner_node_probs[,names(state_cols)]
tiff("4_graphics/simmap.tiff", units="cm", width=7, height=14, res=600)
phytools::plotTree(tree=mcc_phylo,
fsize=0.6,
ftype="i")
tiplabels(pie=tip_states_probs,
piecol=state_cols,
cex=0.45)
nodelabels(node=(1+n_tips):(n_tips+n_inner_nodes),
pie= inner_node_probs,
piecol=state_cols,
cex=1.3)
axisPhylo(pos=c(0.5), font=3, cex.axis=0.5)
dev.off()
## trait name
trait_name = "sla"
## trait values
trait = spp_traits[[trait_name]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, se)
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(mean(trait), sd(trait))
10.3-8.96
1.34/8.96
10.3-5.98
4.32/5.98
## trait name
trait_name = "seed"
## trait values
trait = spp_traits[[trait_name]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, se)
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(mean(trait), sd(trait))
## trait name
trait_name = "seed_mass"
## trait values
trait = spp_traits[[trait_name]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, se)
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(mean(trait), sd(trait))
2.77 - 0.924
1.846/0.924
### describe
sp_regime_trait %>%
group_by(regime) %>%
mutate(trait = log(trait)) %>%
reframe(mean(trait), sd(trait))
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(median(trait), sd(trait))
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(median(trait), IQR(trait))
## trait name
trait_name = "sla"
## trait values
trait = spp_traits[[trait_name]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, se)
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(median(trait), IQR(trait))
9.8-7.78
2.02/7.78
9.8-5.6
4.2/5.6
## trait name
trait_name = "seed_mass"
## trait values
trait = spp_traits[[trait_name]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, se)
### describe
sp_regime_trait %>%
group_by(regime) %>%
reframe(median(trait), IQR(trait))
1.5-1.05
0.45/1.05
1.5 - 0.833
0.667/0.833
spp_traits
sp_regime_trait
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, n, se)
spp_traits[["n"]]
n = spp_traits[["n"]]
se = spp_traits[[trait_name]] / sqrt(spp_traits[["n"]])
### species regime and traits
sp_regime_trait = data.frame(species, regime, trait, n, se)
sp_regime_trait
sum(sp_regime_trait$n)
mean(sp_regime_trait$n)
sd(sp_regime_trait$n)
